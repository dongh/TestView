<resources>

    <!--
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.    -->
    <style name="AppBaseTheme" parent="android:Theme.Light">

        <!--
            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        -->

    </style>

    <!-- Application theme. -->
    <style name="AppTheme" parent="AppBaseTheme">
        <!-- All customizations that are NOT specific to a particular API-level can go here. -->
    </style>
    <!-- 第一种 :此时不需要在 Xml 布局文件中声明自定义控件的属性（此时会从资源文件中读取奇怪的文字）-->
    <!-- MyAppTheme_1 -->
    <style name="MyAppTheme_1" parent="@android:style/Theme.Light.NoTitleBar">
        <item name="textColor">@color/red</item>
        <item name="text">第一种</item>
        <item name="textSize">@dimen/x_large_font</item>
    </style>
	<!-- 第二种 :此时不需要在 Xml 布局文件中声明自定义控件的属性-->
    <!-- MyFirstCustomerViewStyle_1 -->
    <style name="MyFirstCustomerViewStyle_1" >
        <item name="textColor">@color/green</item>
        <item name="text">第二种</item>
        <item name="textSize">@dimen/x_large_font</item>
    </style>
    <!-- 第四种（1）：在 Xml 布局文件中直接声明属性-->
    <!-- 第四种（2）-->
    <!-- MyAppTheme_2 -->
    <style name="MyAppTheme_2" parent="@android:style/Theme.Light.NoTitleBar">
         <item name="myCustomerStyle">@style/MyFirstCustomerViewStyle_2</item>
    </style>
    <!-- MyFirstCustomerViewStyle_2 -->
    <style name="MyFirstCustomerViewStyle_2" parent="@android:style/Theme.Light.NoTitleBar">
         <item name="textColor">@color/oriange</item>
        <item name="text">第四种（2）</item>
        <item name="textSize">@dimen/x_large_font</item>
    </style>
    <!-- 第四种 （3）-->
    <!-- MyFirstCustomerViewStyle_3 -->
    <style name="MyFirstCustomerViewStyle_3" >
        <item name="textColor">@color/purple</item>
        <item name="text">第四种（3）</item>
        <item name="textSize">@dimen/x_large_font</item>
    </style>
</resources>